package com.example.library.pojo;

import java.util.ArrayList;
import java.util.List;

public class TicketTableExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table ticket_table
     *
     * @mbggenerated Mon Jan 07 14:24:56 CST 2019
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table ticket_table
     *
     * @mbggenerated Mon Jan 07 14:24:56 CST 2019
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table ticket_table
     *
     * @mbggenerated Mon Jan 07 14:24:56 CST 2019
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ticket_table
     *
     * @mbggenerated Mon Jan 07 14:24:56 CST 2019
     */
    public TicketTableExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ticket_table
     *
     * @mbggenerated Mon Jan 07 14:24:56 CST 2019
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ticket_table
     *
     * @mbggenerated Mon Jan 07 14:24:56 CST 2019
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ticket_table
     *
     * @mbggenerated Mon Jan 07 14:24:56 CST 2019
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ticket_table
     *
     * @mbggenerated Mon Jan 07 14:24:56 CST 2019
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ticket_table
     *
     * @mbggenerated Mon Jan 07 14:24:56 CST 2019
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ticket_table
     *
     * @mbggenerated Mon Jan 07 14:24:56 CST 2019
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ticket_table
     *
     * @mbggenerated Mon Jan 07 14:24:56 CST 2019
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ticket_table
     *
     * @mbggenerated Mon Jan 07 14:24:56 CST 2019
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ticket_table
     *
     * @mbggenerated Mon Jan 07 14:24:56 CST 2019
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ticket_table
     *
     * @mbggenerated Mon Jan 07 14:24:56 CST 2019
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table ticket_table
     *
     * @mbggenerated Mon Jan 07 14:24:56 CST 2019
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andTicketidIsNull() {
            addCriterion("ticketID is null");
            return (Criteria) this;
        }

        public Criteria andTicketidIsNotNull() {
            addCriterion("ticketID is not null");
            return (Criteria) this;
        }

        public Criteria andTicketidEqualTo(String value) {
            addCriterion("ticketID =", value, "ticketid");
            return (Criteria) this;
        }

        public Criteria andTicketidNotEqualTo(String value) {
            addCriterion("ticketID <>", value, "ticketid");
            return (Criteria) this;
        }

        public Criteria andTicketidGreaterThan(String value) {
            addCriterion("ticketID >", value, "ticketid");
            return (Criteria) this;
        }

        public Criteria andTicketidGreaterThanOrEqualTo(String value) {
            addCriterion("ticketID >=", value, "ticketid");
            return (Criteria) this;
        }

        public Criteria andTicketidLessThan(String value) {
            addCriterion("ticketID <", value, "ticketid");
            return (Criteria) this;
        }

        public Criteria andTicketidLessThanOrEqualTo(String value) {
            addCriterion("ticketID <=", value, "ticketid");
            return (Criteria) this;
        }

        public Criteria andTicketidLike(String value) {
            addCriterion("ticketID like", value, "ticketid");
            return (Criteria) this;
        }

        public Criteria andTicketidNotLike(String value) {
            addCriterion("ticketID not like", value, "ticketid");
            return (Criteria) this;
        }

        public Criteria andTicketidIn(List<String> values) {
            addCriterion("ticketID in", values, "ticketid");
            return (Criteria) this;
        }

        public Criteria andTicketidNotIn(List<String> values) {
            addCriterion("ticketID not in", values, "ticketid");
            return (Criteria) this;
        }

        public Criteria andTicketidBetween(String value1, String value2) {
            addCriterion("ticketID between", value1, value2, "ticketid");
            return (Criteria) this;
        }

        public Criteria andTicketidNotBetween(String value1, String value2) {
            addCriterion("ticketID not between", value1, value2, "ticketid");
            return (Criteria) this;
        }

        public Criteria andUseridIsNull() {
            addCriterion("userID is null");
            return (Criteria) this;
        }

        public Criteria andUseridIsNotNull() {
            addCriterion("userID is not null");
            return (Criteria) this;
        }

        public Criteria andUseridEqualTo(String value) {
            addCriterion("userID =", value, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridNotEqualTo(String value) {
            addCriterion("userID <>", value, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridGreaterThan(String value) {
            addCriterion("userID >", value, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridGreaterThanOrEqualTo(String value) {
            addCriterion("userID >=", value, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridLessThan(String value) {
            addCriterion("userID <", value, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridLessThanOrEqualTo(String value) {
            addCriterion("userID <=", value, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridLike(String value) {
            addCriterion("userID like", value, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridNotLike(String value) {
            addCriterion("userID not like", value, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridIn(List<String> values) {
            addCriterion("userID in", values, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridNotIn(List<String> values) {
            addCriterion("userID not in", values, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridBetween(String value1, String value2) {
            addCriterion("userID between", value1, value2, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridNotBetween(String value1, String value2) {
            addCriterion("userID not between", value1, value2, "userid");
            return (Criteria) this;
        }

        public Criteria andTicketpriceIsNull() {
            addCriterion("ticketPrice is null");
            return (Criteria) this;
        }

        public Criteria andTicketpriceIsNotNull() {
            addCriterion("ticketPrice is not null");
            return (Criteria) this;
        }

        public Criteria andTicketpriceEqualTo(Double value) {
            addCriterion("ticketPrice =", value, "ticketprice");
            return (Criteria) this;
        }

        public Criteria andTicketpriceNotEqualTo(Double value) {
            addCriterion("ticketPrice <>", value, "ticketprice");
            return (Criteria) this;
        }

        public Criteria andTicketpriceGreaterThan(Double value) {
            addCriterion("ticketPrice >", value, "ticketprice");
            return (Criteria) this;
        }

        public Criteria andTicketpriceGreaterThanOrEqualTo(Double value) {
            addCriterion("ticketPrice >=", value, "ticketprice");
            return (Criteria) this;
        }

        public Criteria andTicketpriceLessThan(Double value) {
            addCriterion("ticketPrice <", value, "ticketprice");
            return (Criteria) this;
        }

        public Criteria andTicketpriceLessThanOrEqualTo(Double value) {
            addCriterion("ticketPrice <=", value, "ticketprice");
            return (Criteria) this;
        }

        public Criteria andTicketpriceIn(List<Double> values) {
            addCriterion("ticketPrice in", values, "ticketprice");
            return (Criteria) this;
        }

        public Criteria andTicketpriceNotIn(List<Double> values) {
            addCriterion("ticketPrice not in", values, "ticketprice");
            return (Criteria) this;
        }

        public Criteria andTicketpriceBetween(Double value1, Double value2) {
            addCriterion("ticketPrice between", value1, value2, "ticketprice");
            return (Criteria) this;
        }

        public Criteria andTicketpriceNotBetween(Double value1, Double value2) {
            addCriterion("ticketPrice not between", value1, value2, "ticketprice");
            return (Criteria) this;
        }

        public Criteria andTicketreasonIsNull() {
            addCriterion("ticketReason is null");
            return (Criteria) this;
        }

        public Criteria andTicketreasonIsNotNull() {
            addCriterion("ticketReason is not null");
            return (Criteria) this;
        }

        public Criteria andTicketreasonEqualTo(String value) {
            addCriterion("ticketReason =", value, "ticketreason");
            return (Criteria) this;
        }

        public Criteria andTicketreasonNotEqualTo(String value) {
            addCriterion("ticketReason <>", value, "ticketreason");
            return (Criteria) this;
        }

        public Criteria andTicketreasonGreaterThan(String value) {
            addCriterion("ticketReason >", value, "ticketreason");
            return (Criteria) this;
        }

        public Criteria andTicketreasonGreaterThanOrEqualTo(String value) {
            addCriterion("ticketReason >=", value, "ticketreason");
            return (Criteria) this;
        }

        public Criteria andTicketreasonLessThan(String value) {
            addCriterion("ticketReason <", value, "ticketreason");
            return (Criteria) this;
        }

        public Criteria andTicketreasonLessThanOrEqualTo(String value) {
            addCriterion("ticketReason <=", value, "ticketreason");
            return (Criteria) this;
        }

        public Criteria andTicketreasonLike(String value) {
            addCriterion("ticketReason like", value, "ticketreason");
            return (Criteria) this;
        }

        public Criteria andTicketreasonNotLike(String value) {
            addCriterion("ticketReason not like", value, "ticketreason");
            return (Criteria) this;
        }

        public Criteria andTicketreasonIn(List<String> values) {
            addCriterion("ticketReason in", values, "ticketreason");
            return (Criteria) this;
        }

        public Criteria andTicketreasonNotIn(List<String> values) {
            addCriterion("ticketReason not in", values, "ticketreason");
            return (Criteria) this;
        }

        public Criteria andTicketreasonBetween(String value1, String value2) {
            addCriterion("ticketReason between", value1, value2, "ticketreason");
            return (Criteria) this;
        }

        public Criteria andTicketreasonNotBetween(String value1, String value2) {
            addCriterion("ticketReason not between", value1, value2, "ticketreason");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table ticket_table
     *
     * @mbggenerated do_not_delete_during_merge Mon Jan 07 14:24:56 CST 2019
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table ticket_table
     *
     * @mbggenerated Mon Jan 07 14:24:56 CST 2019
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}