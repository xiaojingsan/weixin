<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.library.mapper.RoleMapper" >
    <!--resultMap对应的是表与实体类的映射  - type 数据库表对应的实体类，别名或完整类名都可以-->
    <resultMap id="ResultMap" type="com.example.library.entity.Role" >
        <!-- 结果集的主键 -->
        <id column="roleID" property="roleID" jdbcType="VARCHAR" />
        <!-- 普通的列  -column 是数据库中字段， property是实体类中字段-->
        <result column="roleName" property="roleName" jdbcType="VARCHAR" />

    </resultMap>

    <insert id="addRole" parameterType="com.example.library.entity.Role">
        insert into role_table VALUES (#{roleID},#{roleName})
    </insert>
    <select id="queryRoleAll" parameterType="com.example.library.entity.Role" resultType="com.example.library.entity.Role">
        select * from role_table
    </select>
    <select id="queryRole" parameterType="com.example.library.entity.Role" resultType="com.example.library.entity.Role">
        select * from role_table
        <where>
            <if test="roleID != null">
                roleID=#{roleID}
            </if>
            <if test="roleName != null">
              AND  roleName=#{roleName}
            </if>
        </where>
    </select>
    <update id="updateRole" parameterType="com.example.library.entity.Role">
        update role_table
        <set>
            <if test="roleName != null">
                roleName=#{roleName}
            </if>
        </set>
        where roleID=#{roleID}
    </update>

    <delete id="deleteRole" parameterType="String">
        delete from role_table where roleID in
        <foreach item="iditem" collection="array" open="(" separator="," close=")">
        #{iditem}
        </foreach>
    </delete>
</mapper>